name: Weekly Analytics Report

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: "0 9 * * 1"
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read
  issues: write # Required for creating issues

jobs:
  weekly-report:
    runs-on: ubuntu-latest
    name: Generate Weekly Report

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Git Scout
        run: |
          echo "ðŸ“¦ Installing Git Scout..."
          npm install -g git-scout || npm install -g @malcohelper/git-scout
          git-scout --version

      - name: Initialize Git Scout
        run: |
          echo "ðŸ”§ Initializing Git Scout..."
          # Create config directory
          mkdir -p ~/.git-scout

          # Initialize with current repository
          cat > ~/.git-scout/config.json << EOF
          {
            "projects": [
              {
                "name": "${{ github.repository }}",
                "path": "${{ github.workspace }}",
                "default": true
              }
            ]
          }
          EOF

          echo "âœ… Git Scout initialized"
          cat ~/.git-scout/config.json

      - name: Generate Weekly Stats
        id: stats
        run: |
          echo "ðŸ“Š Generating stats for last 7 days..."

          # Run git-scout and save output
          git-scout stats --since 7d > /tmp/git-scout-output.txt 2>&1 || true

          # Also capture JSON if available
          git-scout stats --since 7d --json > /tmp/git-scout-stats.json 2>&1 || echo '{}' > /tmp/git-scout-stats.json

          # Display output
          cat /tmp/git-scout-output.txt

          echo "âœ… Stats generated"

      - name: Create Issue with Report
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            // Read Git Scout output
            let gitScoutOutput = '';
            try {
              gitScoutOutput = fs.readFileSync('/tmp/git-scout-output.txt', 'utf8');
            } catch (e) {
              gitScoutOutput = '_No stats available_';
            }

            // Try to read JSON for structured data
            let stats = {};
            try {
              const jsonContent = fs.readFileSync('/tmp/git-scout-stats.json', 'utf8');
              stats = JSON.parse(jsonContent);
            } catch (e) {
              console.log('Could not parse JSON stats:', e.message);
            }

            const title = 'ðŸ“Š Weekly Analytics Report - ' + new Date().toISOString().split('T')[0];

            let body = '## Weekly Development Summary\n\n';
            body += 'This is an automated weekly report generated by **Git Scout**.\n\n';
            body += '### ðŸ“ˆ Analysis Results (Last 7 Days)\n\n';
            body += '```\n';
            body += gitScoutOutput;
            body += '\n```\n\n';

            if (stats.totalCommits) {
              body += '### ðŸ“Š Quick Stats\n\n';
              body += '- **Total Commits**: ' + (stats.totalCommits || 'N/A') + '\n';
              body += '- **Files Changed**: ' + (stats.totalFiles || 'N/A') + '\n';
              body += '- **Active Contributors**: ' + (stats.activeAuthors || 'N/A') + '\n';
              body += '- **Lines Added**: +' + (stats.totalAdditions || 0) + '\n';
              body += '- **Lines Removed**: -' + (stats.totalDeletions || 0) + '\n\n';
            }

            body += '### ðŸŽ¯ Recommended Actions\n\n';
            body += '- Review team productivity trends\n';
            body += '- Identify potential bottlenecks\n';
            body += '- Plan next week\'s priorities\n';
            body += '- Recognize top contributors\n';
            body += '- Check for any unusual patterns\n\n';

            body += '### ðŸ“– More Information\n\n';
            body += '- **Report Generated**: ' + new Date().toLocaleString() + '\n';
            body += '- **Analysis Period**: Last 7 days\n';
            body += '- **Repository**: ' + context.repo.owner + '/' + context.repo.repo + '\n\n';
            body += '---\n\n';
            body += '*Automated by [Git Scout](https://github.com/malcohelper/git-scout) â€¢ ';
            body += '[View Workflow Run](' + process.env.GITHUB_SERVER_URL + '/';
            body += process.env.GITHUB_REPOSITORY + '/actions/runs/' + process.env.GITHUB_RUN_ID + ')*';

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['analytics', 'weekly-report', 'automated']
            });
